<project name="openads" default="package" basedir=".">
  <property name="test.conf.xml" value="devel.xml"/>
  <property name="dir.test.results" location="build/test-results"/>
  <property name="dir.test.reports" location="build/test-results"/>
  <property file="devel.properties"/>
  <property file="etc/version.properties"/>

  <!-- Import the include/exclude filelist -->
  <import file="build-filelist.xml"/>
  <!-- Import the svn commands -->
  <import file="build-svn.xml"/>

  <!-- Openads Package Integrity Plugin -->
  <taskdef name="checkdistribution" classname="org.openads.ant.CheckDistributionTask"/>
  <!-- Openads Delivery Generation Plugin -->
  <taskdef name="generatedelivery" classname="org.openads.ant.GenerateDeliveryTask"/>

  <target name="clean" description="Cleans all the files generated during the build.">
    <delete file="var/test.log" />
    <delete dir="build" />
    <delete file="tests.xml" />
  </target>

  <target name="checkconsistency"
    description="Checks whether all the files in the working directory are specified in the included or excluded lists of files.">
    <checkdistribution>
      <includeset dir="${basedir}">
        <patternset refid="dist.included"/>
        <patternset refid="dist.writable"/>
      </includeset>
      <excludeset dir="${basedir}">
        <patternset refid="dist.excluded"/>
      </excludeset>
    </checkdistribution>
  </target>
  
  <target name="generate-delivery"
    description="Merge delivery files into /www/delivery folder to optimize their speed.">
    <generatedelivery outputdir="${basedir}/www/delivery" max_path="${basedir}" template="${basedir}/www/delivery_dev/template.php">
      <deliveryfiles dir="${basedir}/www/delivery_dev">
        <include name="*.php"/>
        <exclude name="template.php"/>
      </deliveryfiles>
    </generatedelivery>
  </target>

  <target name="delivery-commit"
    description="Merge delivery files into /www/delivery folder to optimize their speed and commit the generated files to the SVN."
    depends="generate-delivery"
  >
    <svn-commit file="www/delivery" notes="Commit of auto-generated delivery files."/>
  </target>

  <target name="init">
    <touch file="should_not_exist"/>
    <mkdir dir="build/test-results"/>
    <mkdir dir="build/test-reports"/>
  </target>

  <target name="init-timestamp" unless="cctimestamp">
    <tstamp/>
    <property name="cctimestamp" value="${DSTAMP}${TSTAMP}"/>
  </target>

  <target name="init-label" unless="label">
    <property name="label" value="trunk"/>
  </target>

  <target name="increase-rc">
    <echo message="Increasing the openads.version.rc number (${openads.version.rc}) by 1."/>
    <propertyfile file="etc/version.properties">
      <entry key="openads.version.rc" type="int" operation="+" value="1"/>
    </propertyfile>
    <svn-commit file="etc/version.properties" notes="Increased the old openads.version.rc number (${openads.version.rc}) by 1."/>
  </target>

  <target name="init-version-number" unless="version.number">
    <property name="version.number" value="${openads.version.major}.${openads.version.minor}.${openads.version.revision}"/>
  </target>

  <target name="prepare-line-info" if="line" depends="init-version-number">
    <!--
      Temporary solution which allow only to create BETA rc builds.
      To be fixed when time permits
     -->
    <property name="linetag" value="-beta-rc${openads.version.rc}"/>
    <property name="version" value="${version.number}${linetag}"/>
    <echo message="Initialized version to: ${version}"/>
  </target>

  <target name="init-version" unless="version" depends="prepare-line-info, init-timestamp, init-label">
    <property name="version" value="${label}-${cctimestamp}"/>
  </target>

  <target name="init-release" unless="release" depends="init,init-version">
    <property name="release" value="openads-${version}"/>
    <echo message="Initialized release: ${release}."/>
  </target>

  <target name="prepare-version-info" if="version" depends="init-release">
    <echo message="Setting MAX_VERSION_READABLE to 'v${version}'."/>
    <replaceregexp file="constants.php"
      match="^.*MAX_VERSION_READABLE.*$"
      replace="    define('MAX_VERSION_READABLE', 'v${version}');"
      byline="true"/>
  </target>

  <target name="prepare-package" depends="prepare-version-info">
    <chmod perm="a+w" dir="${basedir}" type="dir">
      <patternset refid="dist.writable"/>
    </chmod>
  </target>

  <target name="package-bzip2" depends="prepare-package">
    <tar destfile="${dir.test.results}/${release}.tar.bz2" basedir="." compression="bzip2" longfile="gnu">
      <patternset refid="dist.included"/>
    </tar>
  </target>

  <target name="package-gz" depends="prepare-package">
    <tar destfile="${dir.test.results}/${release}.tar.gz" basedir="." compression="gzip" longfile="gnu">
      <patternset refid="dist.included"/>
    </tar>
  </target>

  <target name="package-zip" depends="prepare-package">
    <zip destfile="${dir.test.results}/${release}.zip" basedir=".">
      <patternset refid="dist.included"/>
    </zip>
  </target>

  <target name="revert-after-packaging">
    <svn-revert file="constants.php"/>
  </target>

  <target name="package-canoo" depends="checkconsistency, package-bzip2,revert-after-packaging"/>

  <target name="package" depends="checkconsistency, prepare-package, package-bzip2, package-gz, package-zip, revert-after-packaging"/>

  <target name="tag" depends="checkconsistency, prepare-version-info">
    <echo message="Tagging release: ${release}."/>
    <svn-tag tag="${release}"/>
  </target>

  <target name="release-beta-rc" depends="clean, svn-update, tag, package, increase-rc" description="Creates a release candidate for beta line."/>

  <target name="test-prepare">
    <xslt style="tests.xsl" in="${test.conf.xml}" out="tests.xml"/>
  </target>

  <target name="test-all" depends="init, test-prepare">
    <ant antfile="tests.xml"/>
  </target>


  <target name="simpletest" depends="clean, init, test-all, package" />

</project>
